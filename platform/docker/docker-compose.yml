version: '3'
volumes:
  user-data:
services:
  db_ktor_quickstart:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: quickstart_db
      MYSQL_USER: quickstart_user
      MYSQL_PASSWORD: quickstart_pwd
    ports:
      - "3333:3306"

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - /tmp/kafka/zoo1/data:/data
      - /tmp/kafka/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${pi:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /tmp/kafka/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    links:
      - zoo1

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1
#
#  app:
#    image: openjdk:8
#    restart: always
#    working_dir: /app
#    volumes:
#    - ../application/build/libs:/app
#    - ~/.m2:/root/.m2
#    expose:
#    - "8080"
#    command:  java -jar register-api-application-1.0.0-REALEASE.jar
#    depends_on:
#    - db_quickstart
#    ports:
#    - "8080:8080"